#!/bin/bash

. ../../../make.env

echo -n -e "Writing start/stop script..."
cat > campsite << EOF
#!/bin/bash
#
#	/etc/init.d/campsite
#
# Starts/stops the campsite daemon
#
# chkconfig: 2345 95 7

################################################################################
#
# CAMPSITE is a Unicode-enabled multilingual web content
# management system for news publications.
# CAMPFIRE is a Unicode-enabled java-based near WYSIWYG text editor.
# Copyright (C)2000,2001  Media Development Loan Fund
# contact: contact@campware.org - http://www.campware.org
# Campware encourages further development. Please let us know.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
################################################################################

# Source function library.

export CAMPSITECTL=$BIN_DIR/campsitectl

test -x \$CAMPSITECTL || exit 0

#
#	See how we were called.
#
case "\$1" in
  start)
	# Check if atd is already running
	procs=\`ps -C "campsite_server" | grep -w "campsite_server" | grep -v grep | wc -l\`
	if [ \$procs -gt 0 ]; then
	    echo "campsite daemon is already started"
	else
	    echo -n 'Starting campsite daemon: '
	    \$CAMPSITECTL start
	    if [ \$? -ne 0 ]; then echo "ERROR"; else echo "OK"; fi
	fi
	;;
  stop)
	echo -n 'Stopping campsite daemon: '
	\$CAMPSITECTL stop
	if [ \$? -ne 0 ]; then echo "ERROR"; else echo "OK"; fi
	;;
  reload|restart)
	\$0 stop
	/bin/sleep 1
	\$0 start
	;;
  status)
	\$CAMPSITECTL status
	;;
  *)
	echo "Usage: /etc/init.d/campsite {start|stop|restart|reload|status}"
	exit 1
esac
exit 0
EOF
[ $? -ne 0 ] && echo "ERROR" && exit 1
echo OK

echo -n -e "Writing server control script..."
cat > campsitectl << EOF
#!/bin/bash

################################################################################
#
# CAMPSITE is a Unicode-enabled multilingual web content
# management system for news publications.
# CAMPFIRE is a Unicode-enabled java-based near WYSIWYG text editor.
# Copyright (C)2000,2001  Media Development Loan Fund
# contact: contact@campware.org - http://www.campware.org
# Campware encourages further development. Please let us know.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
################################################################################

export CAMPSITE_SERVER=campsite_server
export CAMPSITE_SERVER_PATH=$BIN_DIR/campsite_server

test -x \$CAMPSITE_SERVER_PATH || exit 0

#
#	See how we were called.
#
case "\$1" in
  start)
	srv_proc=\`ps ax | grep -w "\$CAMPSITE_SERVER" | grep -v grep | grep -v -w ps | wc -l\`
	if [ \$srv_proc -ne 0 ]; then
	    exit 0
	fi
	\$CAMPSITE_SERVER_PATH
	err_code=\$?
	if [ \$err_code -ne 0 ]; then
	    exit 1
	fi
	srv_proc=\`ps ax | grep -w "\$CAMPSITE_SERVER" | grep -v grep | grep -v -w ps | wc -l\`
	if [ \$srv_proc -eq 0 ]; then
	    exit 1
	fi
	;;
  stop)
	output=\`${KILLALL} "\$CAMPSITE_SERVER"\`
	[ \$? -ne 0 ] && echo \$output && exit 1
	;;
  reload|restart)
	${KILLALL} "\$CAMPSITE_SERVER" &> /dev/null
	\$0 start
	;;
  status)
	procs=\`ps ax | grep -w "\$CAMPSITE_SERVER" | grep -v grep | grep -v -w ps | wc -l\`
	if [ \$procs -gt 0 ]; then
	    echo "campsite server is running"
	else
	    echo "campsite server is not running"
	fi
	;;
  *)
	echo "Usage: \$0 {start|stop|restart|reload|status}"
	exit 1
esac
exit 0
EOF

# done writing control file; check if ok
[ $? -ne 0 ] && echo "ERROR" && exit 1
echo OK
