<?php
// Call MetaLanguageTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "MetaLanguageTest::main");
}

require_once('PHPUnit/Framework/TestCase.php');
require_once('PHPUnit/Framework/TestSuite.php');

require_once('template_engine/metaclasses/MetaLanguage.php');

require_once('set_path.php');

/**
 * Test class for MetaLanguage.
 * Generated by PHPUnit_Util_Skeleton on 2007-07-02 at 13:28:21.
 */
class MetaLanguageTest extends PHPUnit_Framework_TestCase
{
	/**
	 * data for the test language object
	 *
	 * @var array
	 */
	protected $m_languageData = array(
									'Name'=>'TestLanguage',
									'OrigName'=>'TestLanguageOrig',
									'Code'=>'tst'
								);
	/**
	 * Language object
	 *
	 * @var object
	 */
	protected $m_languageObj;

	/**
	 * MetaLanguage object
	 *
	 * @var object
	 */
	protected $m_metaLanguageObj;

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once('PHPUnit/TextUI/TestRunner.php');

        $suite  = new PHPUnit_Framework_TestSuite('MetaLanguageTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
	{
		global $g_ado_db;

		$query = "DELETE FROM Languages WHERE Name = '" . $this->m_languageData['Name'] . "'";
		$g_ado_db->Execute($query);

		$this->m_languageObj = new Language();
		$this->m_languageObj->create($this->m_languageData);
		$this->m_metaLanguageObj = new MetaLanguage($this->m_languageObj->getLanguageId());
	}

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    	$this->m_languageObj->delete();
    }

    public function testLink()
    {
    	global $Campsite;

    	$this->assertTrue(is_link($Campsite['HTML_DIR'].'/'.$this->m_languageData['Code'].'.php'));
    	$this->m_languageObj->delete();
    	$this->assertFalse(is_link($Campsite['HTML_DIR'].'/'.$this->m_languageData['Code'].'.php'));
    }

    public function testNameProperty()
    {
    	$this->assertEquals($this->m_languageData['Name'], $this->m_metaLanguageObj->english_name);
    }

    public function testOrigNameProperty()
    {
    	$this->assertEquals($this->m_languageData['OrigName'], $this->m_metaLanguageObj->name);
    }

    public function testNumberProperty()
    {
    	$this->assertEquals($this->m_languageObj->getLanguageId(), $this->m_metaLanguageObj->number);
    }

	public function testCodeProperty()
	{
    	$this->assertEquals($this->m_languageData['Code'], $this->m_metaLanguageObj->code);
	}

	public function testDefinedProperty()
	{
    	$this->assertEquals(true, $this->m_metaLanguageObj->defined);
    	$this->m_metaLanguageObj = new MetaLanguage();
    	$this->assertEquals(false, $this->m_metaLanguageObj->defined);
	}
}

// Call MetaLanguageTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "MetaLanguageTest::main") {
    MetaLanguageTest::main();
}
?>
