#!/bin/bash

. ${INSTALL_CONF}/conf_functions

configure_campsite()
{
cc_interactive=""
while [ "$1" != "" ]; do
    case $1 in
    --interactive) cc_interactive="$1" ;;
    esac
    shift 1
done

prepare_install_env || exit 1
check_install_deps || exit 1
check_install_config

if [ "$cc_interactive" = "--interactive" ]; then

configure_install
[ $? -ne 0 ] && echo "Error configuring install parameters" && exit 1
install_conf --set
. "$INSTALL_CONF/../configure" --define_start_env &> /dev/null
[ $? -ne 0 ] && echo "Error configuring install environment" && exit 1

export MODULES_LIST="DATABASE EVENT_HANDLERS SEARCH_ENGINE ADMIN_INTERFACE"
echo "Please wait while checking modules configuration..."
for cc_mod in $MODULES_LIST; do
    check_module_deps $cc_mod $cc_interactive
    if [ $? -ne 0 ]; then
	if [ "$output" != "" ]; then echo $output; fi
	echo "There is a dependency problem. Please read the previous message and"
	echo "install the required program/package".
	exit 1
    fi
done
choice_yn "\nCampsite configuration is completed. Do you want to review it?" Y
if [ "$choice" = "Y" ]; then
    echo -e "\nInstall configuration"
    install_conf
    read
fi

fi # interactive

}


read_parameter()
{
param=$1
def_val=$2
explanation=$3

[ "$3" != "" ] && echo -e "- $1: $3"
echo -e -n "\tEnter $1 value"
[ "$2" != "" ] && echo -n " [$2]"
echo -n ": "
read -r val
if [ "$val" = "" ]; then
    val=$2
fi
export $1="$val"
return 0
}

read_instance_parameters()
{
read_parameter database_server_address 127.0.0.1 "The IP address of the MySQL server - usualy localhost"
read_parameter database_user root "The user is needed to connect to the database server"
read_parameter database_password "" "The password is needed to connect to the database server"
read_parameter smtp_server_address 127.0.0.1 "The IP address of the email server - usualy localhost"
}

read_advanced_instance_parameters()
{
read_parameter database_server_port 0 "This is the database server listening port - 0 means\nuse default"
read_parameter smtp_server_port 25 "This is the email server listening port - default 25"
read_parameter apache_user "$APACHE_USER" "The owner of instance files; the template engine will run\nwith this user id - default apache user should work ok"
read_parameter apache_group "$APACHE_GROUP" "The group owner of instance files; the template engine will\nrun with this group id - default apache group should work ok"
}

args=(--db_server_address --db_user --db_password --smtp_server_address --db_server_port \
      --smtp_server_port --apache_user --apache_group)
params=(database_server_address database_user database_password smtp_server_address \
        database_server_port smtp_server_port apache_user apache_group)

install_default_instance()
{
echo "The base package was installed. In order for Campsite to work you must install"
echo "at least one instance."

if [ "$1" != "Y" ]; then
    choice_yn "Do you want to install the default Campsite instance?" "Y"
    if [ $? -ne 0 ]; then
	# The choice was no
        return 0
    fi
fi
choice_yn "Do you want to change the instance base parameters?" "N"
if [ $? -eq 0 ]; then
    echo ""
    read_instance_parameters
    echo ""
fi
apache_user=
apache_group=
choice_yn "Do you want to change the instance advanced parameters?" "N"
if [ $? -eq 0 ]; then
    echo ""
    read_advanced_instance_parameters
    echo ""
fi
cli_args=""
index=0
while [ $index -le 9 ]; do
    param_name=${params[$index]}
    arg_name=${args[$index]}
    param_value=${!param_name}
    if [ "$param_value" != "" ]; then
	cli_args="$cli_args  $arg_name $param_value"
    fi
    index=`expr $index + 1`
done
echo -e "\nRunning $BIN_DIR/campsite-create-instance"
if [ "$cli_args" != "" ]; then
    echo -e "with the following arguments: $cli_args\n"
else
    echo -e "with no arguments (use default values)\n"
fi
$BIN_DIR/campsite-create-instance $cli_args && export DEF_INST_INSTALLED=Y && return 0
return 1
}
