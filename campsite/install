#!/bin/sh

do_configure()
{
    rm -f install_log
    echo -e "\nSTEP 1"
    echo -n "Configuring campsite (this may take a while, please wait)..."
    echo -e "###############################################\n\tConfiguring campsite\n" >> install_log
    ./configure $* >> install_log 2>&1
    err_code=$?
    if [ $err_code -ne 0 ]; then
	echo "ERROR."
	echo "Read install_log for more information on configuration error."
	echo "Please report bug to http://www.campware.org/bugs"
	exit 1
    fi
    echo "done"
}

compile_sources()
{
    echo -e "\nSTEP 2"
    [ "$PACKAGE_TYPE" = "binary" ] && echo "Binary package. Skipping compilation." && return 0
    echo -n "Compiling sources (this may take a while, please wait)..."
    echo -e "###############################################\n\tCompiling sources\n" >> install_log
    make all >> install_log 2>&1
    err_code=$?
    if [ $err_code -ne 0 ]; then
	echo "ERROR."
	echo "Read install_log for more information on compilation error."
	echo "Please report bug to http://www.campware.org/bugs"
	exit 1
    fi
    echo "done"
}

install_campsite()
{
    echo -e "\nSTEP 3"
    echo -n "Installing CAMPSITE..."
    echo -e "\n\n###############################################\n\tInstalling campsite\n" >> install_log
    make install >> install_log 2>&1
    err_code=$?
    if [ $err_code -ne 0 ]; then
	rm -f ./campsite_upgrade
	echo "ERROR."
	echo "Read install_log for more information on installation error."
	echo "Please report bug to http://www.campware.org/bugs"
	exit 1
    fi
    echo -e "done\n\nCAMPSITE was installed successfully."
    echo "For a complete installation log read install_log file."
    echo -n -e "\nStarting campsite_server daemon..."
    $BIN_DIR/campsitectl restart
    err_code=$?
    if [ $err_code -ne 0 ]; then
	echo "ERROR"
    else
	echo "done"
    fi
    echo -e "\nIMPORTANT!!!"
    echo "Please configure apache server before using CAMPSITE application; make sure"
    echo -e "the crond daemon is running; read INSTALL file and follow the instructions.\n"
    echo "To enter the CAMPSITE administration site start a browser and type in the"
    echo "following URL: http://localhost/priv/."
    if [ -f ./campsite_upgrade ]; then
	echo -e "\nYour older database was preserved. You should log in to the CAMPSITE"
	echo "administration site using the old user and password."
    else
        echo -e "Fill in \"admin\" and \"admn00\" user and password respectivelly to log in."
	echo "You should change the password as soon as possible."
    fi
    rm -f ./campsite_upgrade
}


# start execution
if [ ! -x ./configure ]; then
    echo -e "Install script must be started from campsite directory!\nAborting..."
    exit 1
fi
go_to_install=false
upgrade=""
interactive="--interactive"
while [ "$1" != "" ]; do
    case $1 in
    --go_to_install) go_to_install=true ;;
    --upgrade) upgrade=--upgrade ;;
    --not_interactive) interactive=""
    esac
    shift 1
done
my_id=`id -u`
. ./configure --define_start_env
if [ "$go_to_install" = "true" ] && [ $my_id -eq 0 ]; then
    install_campsite
    exit 0
fi
clear
. ${INSTALL_CONF}/install_functions
if [ $? -ne 0 ]; then
    echo "Error reading install files."
    echo "Please report bug to http://www.campware.org/bugs"
    echo "Aborting..."
    exit 1
fi
if [ "$1" = "--version" ]; then
    echo -e "CAMPSITE $CAMPSITE_VERSION, released on $CAMPSITE_RELEASE_DATE"
    exit 0
fi
echo -e "\nInstalling CAMPSITE $CAMPSITE_VERSION"
if [ $my_id -ne 0 ]; then
    echo -e "\nYou are not logged in as root. Without root access this application"
    echo "can not be installed. You will be prompted later for root password."
fi
[ "$interactive" = "--interactive" ] && configure_campsite $upgrade $interactive
do_configure $upgrade
compile_sources
if [ $my_id -ne 0 ]; then
    echo -e "\nIt is time to login as root. Please supply password."
    while true; do
	echo -n "Root password: "
	archive_path=`pwd`
	su - --command="echo \"\"; cd $archive_path; ./install --go_to_install" 2> /dev/null
	err_code=$?
	if [ $err_code -ne 0 ]; then
	    echo -n -e "\nThe password was not correct. Try again (Y/N) ? [Y]: "
	    read yn
	    if [ "$yn" = "" ]; then
		yn="Y"
	    fi
	    if [ "${yn:0:1}" != "Y" ] && [ "${yn:0:1}" != "y" ]; then
		echo "Aborting..."
		exit 1
	    fi
	else
	    exit 0
	fi
    done
else
    install_campsite
fi
exit 0
