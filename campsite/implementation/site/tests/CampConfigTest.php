<?php
// Call CampConfigTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "CampConfigTest::main");
}

require_once('PHPUnit/Framework/TestCase.php');
require_once('PHPUnit/Framework/TestSuite.php');

require_once('template_engine/classes/CampConfig.php');

require_once('set_path.php');

/**
 * Test class for CampConfig.
 * Generated by PHPUnit_Util_Skeleton on 2007-07-20 at 12:50:00.
 */
class CampConfigTest extends PHPUnit_Framework_TestCase
{
    /**
	 * Configuration object
	 *
	 * @var object
	 */
	protected $m_configObj = null;


    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once('PHPUnit/TextUI/TestRunner.php');

        $suite  = new PHPUnit_Framework_TestSuite('CampConfigTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
   	{
        $this->m_configObj = CampConfig::singleton();
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    public function testGetSetting()
    {
        global $CampCfg;

    	$this->assertEquals($CampCfg['site']['name'], $this->m_configObj->getSetting('site.name'));
    }

    public function testGetNonexistentSetting()
    {
        $this->assertEquals(null, $this->m_configObj->getSetting('unknown.unknown'));
    }

}

// Call CampConfigTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "CampConfigTest::main") {
    CampConfigTest::main();
}
?>