dnl Process this file with autoconf to produce a configure script.
AC_INIT(www-sql.c)
AC_CONFIG_HEADER(config.h)

# propagate the version number ...
VERSION="0.5.7"
AC_SUBST(VERSION)
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

# which database will you be using? (current options are mysql or pgsql)
AC_ARG_WITH(database,
[  --with-database=db      use which database system (mysql|pgsql)],
[if test "x$with_database" = "xmysql" || test "x$with_database" = "xpgsql";then
  TARGET="$with_database"
else
  echo "Unknown database ... Defaulting to MySQL"
  TARGET="mysql"
fi],
[TARGET="mysql"])
AC_SUBST(TARGET)
echo "Using $TARGET as the database system"

# do you want to try the new scanner?
AC_ARG_WITH(new-scanner,
[  --without-new-scanner   use the old input scanner],,
[with_new_scanner=yes])
if test "x$with_new_scanner" != xno; then
  SCANNER=newscan.o
  AC_DEFINE(NEW_SCANNER)
else
  SCANNER=scanner.o
fi
AC_SUBST(SCANNER)

dnl MySQL args
AC_ARG_WITH(mysql-headers,
[  --with-mysql-headers    location of mysql.h],
[if test -f "$with_mysql_headers/mysql/mysql.h"; then
dnl take into account people who didn't read about change in Changelog
MYSQL_INCDIR="-I$with_mysql_headers/mysql"
else
MYSQL_INCDIR="-I$with_mysql_headers"
fi])
AC_ARG_WITH(mysql-libs,
[  --with-mysql-libs       location of libmysqlclient],
[MYSQL_LIBDIR="-L$with_mysql_libs"])

dnl PostgreSQL args
AC_ARG_WITH(pgsql-headers,
[  --with-pgsql-headers    location of libpq-fe.h],
[PGSQL_INCDIR="-I$with_pgsql_headers"])
AC_ARG_WITH(pgsql-libs,
[  --with-pgsql-libs       location of libpq],
[PGSQL_LIBDIR="-L$with_pgsql_libs"])

dnl Allow user to fix the only known www-sql security hole...
AC_ARG_ENABLE(apache-action-check,
[  --enable-apache-action-check   enable plug for security hole (apache only)],
[if test "x$enable_apache_action_check" != xno; then
AC_DEFINE(ONLY_APACHE_ACTION)
fi], [enable_apache_action_check=no])

dnl setting this option enables 'dangerous' functions such as exec
AC_ARG_ENABLE(unsafe,
[  --enable-unsafe         enables dangerous functions such as exec],
[if test "x$enable_unsafe" != xno; then
AC_DEFINE(ENABLE_UNSAFE)
fi], [enable_unsafe=no])

AC_ARG_ENABLE(recursive,
[  --enable-recursive      enable recursive extensions to www-sql],
[if test "x&enable_recursive" != xno; then
AC_DEFINE(RECURSIVE)
fi], [enable_recursive=no])

dnl Find CGI-BIN directory
AC_MSG_CHECKING([location of CGI directory])
CGI_DIR=/usr/local/etc/httpd/cgi-bin
JH_FIND_DIR(
[/home/httpd/cgi-bin /var/lib/httpd/cgi-bin /usr/local/web/cgi-bin /usr/local/roxen/cgi-bin /usr/local/apache/cgi-bin /usr/local/apache/share/cgi-bin /usr/local/etc/httpd/cgi-bin],
CGI_DIR)
AC_SUBST(CGI_DIR)
AC_MSG_RESULT([$CGI_DIR])

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_INSTALL

dnl Checks for libraries.
SOCK_LIB=
dnl Solaris 2.6 needs -lxnet for socket functions (according to Todd Koeckeritz)
AC_CHECK_LIB(xnet, socket, SOCK_LIB="$SOCK_LIB -lxnet")
dnl Solaris 2.4 - 2.5 need -lsocket -lnsl (thanks Todd)
AC_CHECK_LIB(socket, socket, SOCK_LIB="$SOCK_LIB -lsocket -lnsl",, -lnsl)

AC_SUBST(SOCK_LIB)

dnl Find MySQL library
if test -z "$MYSQL_LIBDIR"; then
  JH_FIND_LIB(mysqlclient, mysql_connect,
    ["" "-L/usr/lib/mysql" "-L/usr/local/lib/mysql" "-L/usr/local/mysql/lib"],
    [MYSQL_LIBDIR=$jh_cv_lib_mysqlclient_mysql_connect],
    [echo "*** MySQL library not found"; MYSQL_LIBDIR=""], [-lm -lz])
fi
AC_SUBST(MYSQL_LIBDIR)

CRYPT_LIB=
AC_CHECK_LIB(crypt, crypt, CRYPT_LIB=-lcrypt)
AC_SUBST(CRYPT_LIB)

dnl Find PostgreSQL library
if test -z "$PGSQL_LIBDIR"; then
  JH_FIND_LIB(pq, PQsetdb,
    ["" "-L/usr/local/lib/" "-L/usr/local/pgsql/lib" "-L/usr/pgsql/lib"],
    [PGSQL_LIBDIR=$jh_cv_lib_pq_PQsetdb],
    [echo "*** PostgreSQL library not found"; PGSQL_LIBDIR=""], [$CRYPT_LIB])
fi
AC_SUBST(PGSQL_LIBDIR)

dnl Checks for header files.
AC_HEADER_STDC

dnl Find MySQL headers
if test -z "$MYSQL_INCDIR"; then
  JH_FIND_HEADER([mysql.h],
    ["" "-I/usr/local/include" "-I/usr/include/mysql" "-I/usr/local/include/mysql" "-I/usr/local/mysql/include"],
    [MYSQL_INCDIR=$jh_cv_header_mysql_h],
    [echo "*** MySQL headers not found"; MYSQL_INCDIR=""])
fi
AC_SUBST(MYSQL_INCDIR)

dnl Find PostgreSQL headers
if test -z "$PGSQL_INCDIR"; then
  JH_FIND_HEADER([libpq-fe.h],
    ["" "-I/usr/local/include" "-I/usr/include/pgsql" "-I/usr/local/pgsql/include" "-I/usr/pgsql/include"],
    [PGSQL_INCDIR=$jh_cv_header_libpq_fe_h],
    [echo "*** PostgreSQL headers not found"; PGSQL_INCDIR=""])
fi
AC_SUBST(PGSQL_INCDIR)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(memcpy re_compile_pattern)

EXTRA_OBJS="lib/xmalloc.o lib/xstrdup.o"
REINC=""
if test $ac_cv_func_re_compile_pattern = no; then
  EXTRA_OBJS="$EXTRA_OBJS lib/regex.o"
  REINC="-I./lib"
fi
AC_SUBST(REINC)
AC_SUBST(EXTRA_OBJS)

AC_OUTPUT(Makefile)

