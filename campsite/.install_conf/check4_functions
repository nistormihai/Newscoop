#!/bin/sh

. ${INSTALL_CONF}/global_functions

###########################################################
## Functions checking if different programs/files are installed
###########################################################

# FUNCTION: is_checked
# Description: check dependancy is already checked
# Parameters:
#	$1 - dependancy name
# Variables set: none
is_checked()
{
[ "$1" = "" ] && return 0
in_list $1 $CHECKED_DEPENDENCIES && return 0
return 1
}
# END OF is_checked

# FUNCTION: set_checked
# Description: set dependancy as checked
# Parameters:
#	$1 - dependancy name
# Variables set: none
set_checked()
{
[ "$1" = "" ] && return 0
in_list $1 $CHECKED_DEPENDENCIES && return 0
export CHECKED_DEPENDENCIES="$CHECKED_DEPENDENCIES $1"
return 0
}
# END OF set_checked

# FUNCTION: check4_pwd
# Description: check if pwd executable is installed
# Parameters: none
# Variables set:
#	PWD - pwd full path
#	output - error message (if any)
check4_pwd()
{
is_checked pwd && return 0
check4_file pwd --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export PWD=$file_path
set_checked pwd
return 0
}
# END OF check4_pwd

# FUNCTION: check4_make
# Description: check if make executable is installed
# Parameters: none
# Variables set:
#	MAKE - make full path
#	output - error message (if any)
check4_make()
{
is_checked make && return 0
check4_file make --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export MAKE=$file_path
set_checked make
return 0
}
# END OF check4_make

# FUNCTION: check4_m4
# Description: check if m4 executable is installed
# Parameters: none
# Variables set:
#	M4 - m4 full path
#	output - error message (if any)
check4_m4()
{
is_checked m4 && return 0
check4_file m4 --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export M4=$file_path
set_checked m4
return 0
}
# END OF check4_m4

# FUNCTION: check4_mkdir
# Description: check if mkdir executable is installed
# Parameters: none
# Variables set:
#	MKDIR - mkdir full path
#	output - error message (if any)
check4_mkdir()
{
is_checked mkdir && return 0
check4_file mkdir --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export MKDIR=$file_path
set_checked mkdir
return 0
}
# END OF check4_mkdir

# FUNCTION: check4_ls
# Description: check if ls executable is installed
# Parameters: none
# Variables set:
#	LS - ls full path
#	output - error message (if any)
check4_ls()
{
is_checked ls && return 0
check4_file ls --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export LS=$file_path
set_checked ls
return 0
}
# END OF check4_ls

# FUNCTION: check4_chown
# Description: check if chown executable is installed
# Parameters: none
# Variables set:
#	CHOWN - chown full path
#	output - error message (if any)
check4_chown()
{
is_checked chown && return 0
check4_file chown --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CHOWN=$file_path
set_checked chown
return 0
}
# END OF check4_chown

# FUNCTION: check4_chmod
# Description: check if chmod executable is installed
# Parameters: none
# Variables set:
#	CHMOD - chmod full path
#	output - error message (if any)
check4_chmod()
{
is_checked chmod && return 0
check4_file chmod --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CHMOD=$file_path
set_checked chmod
return 0
}
# END OF check4_chmod

# FUNCTION: check4_cat
# Description: check if cat executable is installed
# Parameters: none
# Variables set:
#	CAT - cat full path
#	output - error message (if any)
check4_cat()
{
is_checked cat && return 0
check4_file cat --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CAT=$file_path
set_checked cat
return 0
}
# END OF check4_cat

# FUNCTION: check4_cut
# Description: check if cut executable is installed
# Parameters: none
# Variables set:
#	CUT - cut full path
#	output - error message (if any)
check4_cut()
{
is_checked cut && return 0
check4_file cut --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CUT=$file_path
set_checked cut
return 0
}
# END OF check4_cut

# FUNCTION: check4_grep
# Description: check if grep executable is installed
# Parameters: none
# Variables set:
#	GREP - grep full path
#	output - error message (if any)
check4_grep()
{
is_checked grep && return 0
check4_file grep --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export GREP=$file_path
set_checked grep
return 0
}
# END OF check4_grep

# FUNCTION: check4_stat
# Description: check if stat executable is installed
# Parameters: none
# Variables set:
#	STAT - stat full path
#	output - error message (if any)
check4_stat()
{
is_checked stat && return 0
check4_file stat --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export STAT=$file_path
set_checked stat
return 0
}
# END OF check4_stat

# FUNCTION: check4_which
# Description: check if which executable is installed
# Parameters: none
# Variables set:
#	WHICH - which full path
#	output - error message (if any)
check4_which()
{
is_checked which && return 0
check4_file which --file --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
[ ! -x $file_path ] && output="executable which not found" && echo $output && return 1
export WHICH=$file_path
set_checked which
return 0
}
# END OF check4_which

# FUNCTION: check4_cp
# Description: check if cp executable is installed
# Parameters: none
# Variables set:
#	CP - cp full path
#	output - error message (if any)
check4_cp()
{
is_checked cp && return 0
check4_file cp --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CP=$file_path
set_checked cp
return 0
}
# END OF check4_cp

# FUNCTION: check4_rm
# Description: check if rm executable is installed
# Parameters: none
# Variables set:
#	RM - rm full path
#	output - error message (if any)
check4_rm()
{
is_checked rm && return 0
check4_file rm --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export RM=$file_path
set_checked rm
return 0
}
# END OF check4_rm

# FUNCTION: check4_clear
# Description: check if clear executable is installed
# Parameters: none
# Variables set:
#	CLEAR - clear full path
#	output - error message (if any)
check4_clear()
{
is_checked clear && return 0
check4_file clear --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export CLEAR=$file_path
set_checked clear
return 0
}
# END OF check4_clear

# FUNCTION: check4_gcc
# Description: check if gcc executable is installed
# Parameters: none
# Variables set:
#	GCC - gcc full path
#	output - error message (if any)
check4_gcc()
{
is_checked gcc && return 0
check4_file gcc --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export GPP=$file_path
set_checked gcc
return 0
}
# END OF check4_gcc

# FUNCTION: check4_gpp
# Description: check if g++ executable is installed
# Parameters: none
# Variables set:
#	GPP - g++ full path
#	output - error message (if any)
check4_gpp()
{
is_checked gpp && return 0
check4_file g++ --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export GPP=$file_path
set_checked gpp
return 0
}
# END OF check4_gpp

# FUNCTION: check4_locate
# Description: check if locate executable is installed
# Parameters: none
# Variables set:
#	LOCATE - locate full path
#	output - error message (if any)
check4_locate()
{
is_checked locate && return 0
check4_file locate --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export LOCATE=$file_path
set_checked locate
return 0
}
# END OF check4_locate

# FUNCTION: check4_mysql
# Description: check if mysql executable is installed
# Parameters: none
# Variables set:
#	MYSQL - mysql full path
#	output - error message (if any)
check4_mysql()
{
is_checked mysql && return 0
check4_file mysql --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/local/mysql/bin"
result=$? && [ $result -ne 0 ] && return 1
export MYSQL=$file_path
set_checked mysql
return 0
}
# END OF check4_mysql

# FUNCTION: check4_mysqladmin
# Description: check if mysqladmin executable is installed
# Parameters: none
# Variables set:
#	MYSQLADMIN - mysql full path
#	output - error message (if any)
check4_mysqladmin()
{
is_checked mysqladmin && return 0
check4_file mysqladmin --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/local/mysql/bin"
result=$? && [ $result -ne 0 ] && return 1
export MYSQLADMIN=$file_path
set_checked mysqladmin
return 0
}
# END OF check4_mysqladmin

# FUNCTION: check4_mysqld
# Description: check if mysqld executable is installed
# Parameters: none
# Variables set:
#	MYSQLD - mysqld full path
#	output - error message (if any)
check4_mysqld()
{
is_checked mysqld && return 0
check4_file mysqld --executable --path "/sbin:/usr/sbin:/usr/local/sbin:/opt/sbin:/usr/libexec:/usr/local/mysql/bin"
result=$? && [ $result -ne 0 ] && return 1
export MYSQLD=$file_path
set_checked mysqld
return 0
}
# END OF check4_mysqld

# FUNCTION: check4_crond
# Description: check if crond executable is installed
# Parameters: --force - force check even if already checked
# Variables set:
#	CROND - crond full path
#	output - error message (if any)
check4_crond()
{
[ "$1" != "--force" ] && is_checked crond && return 0
check4_file cron --executable --path "/sbin:/usr/sbin:/usr/local/sbin:/opt/sbin" &> /dev/null
if [ $? -ne 0 ]; then
    check4_file crond --executable --path "/sbin:/usr/sbin:/usr/local/sbin:/opt/sbin"
    [ $? -ne 0 ] && return 1
fi
export CROND=$file_path
set_checked crond
return 0
}
# END OF check4_crond

# FUNCTION: check4_passwd
# Description: check if passwd file is installed
# Parameters: none
# Variables set:
#	PASSWD - passwd full path
#	output - error message (if any)
check4_passwd()
{
is_checked passwd && return 0
check4_file passwd --file --path "/etc"
result=$? && [ $result -ne 0 ] && return 1
export PASSWD=$file_path
set_checked passwd
return 0
}
# END OF check4_passwd

# FUNCTION: check4_group
# Description: check if group file is installed
# Parameters: none
# Variables set:
#	GROUP - group full path
#	output - error message (if any)
check4_group()
{
is_checked group && return 0
check4_file group --file --path "/etc"
result=$? && [ $result -ne 0 ] && return 1
export GROUP=$file_path
set_checked group
return 0
}
# END OF check4_group

# FUNCTION: check4_crontab
# Description: check if crontab file is installed
# Parameters: none
# Variables set:
#	CRONTAB - crontab full path
#	output - error message (if any)
check4_crontab()
{
is_checked crontab && return 0
check4_file crontab --file --path "/etc"
result=$? && [ $result -ne 0 ] && return 1
export CRONTAB=$file_path
set_checked crontab
return 0
}
# END OF check4_crontab

# FUNCTION: check4_mysql_h
# Description: check if mysql.h file is installed
# Parameters: none
# Variables set:
#	MYSQL_H - mysql.h full path
#	output - error message (if any)
check4_mysql_h()
{
is_checked mysql_h && return 0
check4_file mysql.h --file --path "/usr/include:/usr/include/mysql:/usr/local/include:/usr/local/include/mysql:/usr/local/mysql/include"
result=$? && [ $result -ne 0 ] && return 1
export MYSQL_H=$file_path
set_checked mysql_h
return 0
}
# END OF check4_mysql_h

# FUNCTION: check4_socket_h
# Description: check if socket.h file is installed
# Parameters: none
# Variables set:
#	SOCKET_H - socket.h full path
#	output - error message (if any)
check4_socket_h()
{
is_checked socket_h && return 0
check4_file socket.h --file --path "/usr/include:/usr/include/sys:/usr/local/include/sys"
result=$? && [ $result -ne 0 ] && return 1
export SOCKET_H=$file_path
set_checked socket_h
return 0
}
# END OF check4_socket_h

# FUNCTION: check4_pthread_h
# Description: check if pthread.h file is installed
# Parameters: none
# Variables set:
#	PTHREAD_H - pthread.h full path
#	output - error message (if any)
check4_pthread_h()
{
is_checked pthread_h && return 0
check4_file pthread.h --file --path "/usr/include:/usr/local/include"
result=$? && [ $result -ne 0 ] && return 1
export PTHREAD_H=$file_path
set_checked pthread_h
return 0
}
# END OF check4_pthread_h

# FUNCTION: check4_semaphore_h
# Description: check if semaphore.h file is installed
# Parameters: none
# Variables set:
#	SEMAPHORE_H - semaphore.h full path
#	output - error message (if any)
check4_semaphore_h()
{
is_checked semaphore_h && return 0
check4_file semaphore.h --file --path "/usr/include:/usr/local/include"
result=$? && [ $result -ne 0 ] && return 1
export SEMAPHORE_H=$file_path
set_checked semaphore_h
return 0
}
# END OF check4_semaphore_h

# FUNCTION: check4_stl
# Description: check if STL is installed
# Parameters: none
# Variables set:
#	STL_PATH - STL full path
#	output - error message (if any)
check4_stl()
{
is_checked stl && return 0
check4_file string --file --path "/usr/include:/usr/include/g++:/usr/include/g++-2:/usr/include/g++-3:/usr/include/c++:/usr/include/c++/3.1:/usr/include/c++/3.2:/usr/local/include:/usr/local/include/g++:/usr/local/include/g++-2:/usr/local/include/g++-3"
result=$? && [ $result -ne 0 ] && output="STL not properly installed" && echo $output && return 1
export STL_PATH=`cut_last_dirs $file_path 1`
for file in map list stack hashtable.h vector; do
    check4_file $file --file --path "$STL_PATH" &> /dev/null
    result=$?
    if [ $result -ne 0 ]; then
	check4_file $file --file --path "$STL_PATH/backward"
	result=$?
    fi
    [ $result -ne 0 ] && output="STL not properly installed" && echo $output && return 1
done
file_path=$STL_PATH
set_checked stl
return 0
}
# END OF check4_stl

# FUNCTION: check4_apache
# Description: check if apache is installed and where is it installed
# Parameters:
#	--interactive - read apache binary/config path from standard input
#	--apache_bin_path <path> - specifies the apache binary path
#	--apache_conf_path <path> - specifies the apache conf path
# Variables set:
#	apache_bin_path - path to apache binary
#	apache_conf_path - path to apache conf files
#	apache_bin_name - apache binary name
#	APACHE_USER - apache daemon user
#	APACHE_GROUP - apache daemon group
check4_apache()
{
is_checked apache && return 0
apache_bin_path=
apache_conf_path=
apache_bin_name=
bin_paths=
interactive=false
while [ "$1" != "" ]; do
    case $1 in
    --interactive) interactive=true ;;
    --apache_bin_path) shift 1; bin_paths=$1 ;;
    --apache_conf_path) shift 1; apache_conf_path=$1 ;;
    *) ;;
    esac
    shift 1
done
[ "$bin_paths" = "" ] && bin_paths="/sbin /usr/sbin /usr/local/apache/bin /home/apache/bin /opt/apache/bin"
bin_names="apache httpd"
for bn in $bin_names; do
    bin_path=`which "$bn" 2> /dev/null`
    [ "$bin_path" != "" ] && apache_bin_name="$bn" && break
done
if [ "$bin_path" = "" ]; then
    for bp in $bin_paths; do
	for nm in $bin_names; do
	    [ -x "${bp}/$nm" ] && bin_path="$bp" && apache_bin_name="$nm" && break
	done
    done
else
    bin_path=`cut_last_dirs "$bin_path" 1`
fi
while [ "$bin_path" = "" ]; do
    if $interactive; then
	choice_yn "Could not find apache binary. Do you want to supply one?" y
	if [ "$choice" = "N" ]; then
	    echo "Could not find apache binary file."
	    return 1
	fi
	read_path_with_test path_to_apache_binary --exp "fill in the path to apache binary"
	[ $? -ne 0 ] && return 1
	read_string apache_bin_name "" "fill in apache binary name"
	[ $? -ne 0 ] && apache_bin_name="" && return 1
	if [ ! -x "$path_to_apache_binary"/"$apache_bin_name" ]; then
	    echo "Invalid apache path/binary name"
	    apache_bin_name=""
	else
	    bin_path="$path_to_apache_binary"
	    break
	fi
    else
	echo "Could not find apache binary file."
	return 1
    fi
done
apache_bin_path="$bin_path"
if [ "$apache_conf_path" != "" ]; then
    conf_path=$apache_conf_path
else
    case "$apache_bin_path" in
    /usr/sbin | /sbin) conf_path="/etc/${apache_bin_name}/conf" ;;
    *) conf_path=`cut_last_dirs "${apache_bin_path}"`/conf ;;
    esac
fi
cf_path=""
for bn in $bin_names; do
    if [ -f "${conf_path}/${bn}.conf" ]; then
	cf_path="${conf_path}/${bn}.conf"
	break
    fi
done
if [ "$cf_path" = "" ]; then
    if $interactive; then
	choice_yn "Could not find apache conf directory. Do you want to supply one?" y
	if [ "$choice" = "N" ]; then
	    echo "Could not find apache configuration file."
	    return 1
	fi
	read_path_with_test path_to_conf_directory --exp "fill in the path to apache configuration file" --file "${apache_bin_name}.conf"
	[ $? -ne 0 ] && return 1
	conf_path=$path_to_conf_directory
    else
	echo "Could not find apache configuration file."
	return 1
    fi
fi
apache_conf_path=$conf_path
user_line=`grep -h -w ^User ${conf_path}/*.conf 2> /dev/null`
if [ "$user_line" = "" ]; then
    echo "Invalid apache configuration files. Aborting."
    return 1
fi
i=1
for w in $user_line; do
    [ $i -eq 2 ] && export APACHE_USER=$w && break
    i=`expr $i + 1`
done
group_line=`grep -h -w ^Group ${conf_path}/*.conf 2> /dev/null`
if [ "$group_line" = "" ]; then
    echo "Invalid apache configuration files. Aborting."
    return 1
fi
i=1
for w in $user_line; do
    [ $i -eq 2 ] && export APACHE_GROUP=$w && break
    i=`expr $i + 1`
done
set_checked apache
return 0
}
# END OF check4_apache

# FUNCTION: check4_libz
# Description: check if z library is installed
# Parameters: none
# Variables set:
#	LIBZ - libz full path
#	output - error message (if any)
check4_libz()
{
is_checked libz && return 0
check4_file libz.so --file --path "/usr/lib:/usr/local/lib"
result=$? && [ $result -ne 0 ] && return 1
export LIBZ=$file_path
set_checked libz
return 0
}
# END OF check4_libz

# FUNCTION: check4_libcrypt
# Description: check if crypt library is installed
# Parameters: none
# Variables set:
#	LIBCRYPT - libcrypt full path
#	output - error message (if any)
check4_libcrypt()
{
is_checked libcrypt && return 0
check4_file libcrypt.so --file --path "/usr/lib:/usr/local/lib"
result=$? && [ $result -ne 0 ] && return 1
export LIBCRYPT=$file_path
set_checked libcrypt
return 0
}
# END OF check4_libcrypt

# FUNCTION: check4_libmysqlclient
# Description: check if mysqlclient library is installed
# Parameters: none
# Variables set:
#	LIBMYSQLCLIENT - mysqlclient library full path
#	LIBMYSQLCLIENT_PATH - path to mysqlclient library
#	output - error message (if any)
check4_libmysqlclient()
{
is_checked libmysqlclient && return 0
check4_file libmysqlclient.a --file --path "/usr/lib:/usr/lib/mysql:/usr/local/lib:/usr/local/lib/mysql:/usr/local/mysql/lib"
result=$? && [ $result -ne 0 ] && return 1
export LIBMYSQLCLIENT=$file_path
export LIBMYSQLCLIENT_PATH=`cut_last_dirs $LIBMYSQLCLIENT 1`
check4_gpp
[ $? -ne 0 ] && return 1
check4_mysql_h
[ $? -ne 0 ] && return 1
check4_libz
[ $? -ne 0 ] && return 1
file_path=$LIBMYSQLCLIENT
test_file="$$_lmysqlclient"
cat > ${test_file}.cpp << EOF
#include <$MYSQL_H>
int main()
{
MYSQL* mysql;
mysql_init(mysql);
}
EOF
g++ -o $test_file ${test_file}.cpp -lm -lz -L$LIBMYSQLCLIENT_PATH -lmysqlclient
result=$?
rm -f ${test_file}.* ${test_file}
[ $result -ne 0 ] && output="mysqlclient library is not installed" && echo $output && return 1
set_checked libmysqlclient
return 0
}
# END OF check4_libmysqlclient

# FUNCTION: check4_libpthread
# Description: check if pthread library is installed
# Parameters: none
# Variables set:
#	LIBPTHREAD - libpthread full path
#	LIBPTHREAD_PATH - path to pthread library
#	output - error message (if any)
check4_libpthread()
{
is_checked libpthread && return 0
check4_file libpthread.so --file --path "/usr/lib:/usr/local/lib"
result=$? && [ $result -ne 0 ] && return 1
export LIBPTHREAD=$file_path
export LIBPTHREAD_PATH=`cut_last_dirs $LIBPTHREAD 1`
check4_gpp
[ $? -ne 0 ] && return 1
check4_pthread_h
[ $? -ne 0 ] && return 1
file_path=$LIBPTHREAD
test_file="$$_lpthread"
cat > ${test_file}.cpp << EOF
#include <$PTHREAD_H>
int main()
{
pthread_create(0, 0, 0, 0);
}
EOF
g++ -o $test_file ${test_file}.cpp -L$LIBPTHREAD_PATH -lpthread
result=$?
rm -f ${test_file}*
[ $result -ne 0 ] && output="pthread library is not installed" && echo $output && return 1
set_checked libpthread
return 0
}
# END OF check4_libpthread

# FUNCTION: check4_iconv
# Description: check if iconv is installed
# Parameters: none
# Variables set:
#	ICONV - full path
#	output - error message (if any)
check4_iconv()
{
is_checked iconv && return 0
check4_file iconv --executable --path "/bin:/usr/bin:/usr/local/bin:/opt/bin"
result=$? && [ $result -ne 0 ] && return 1
export ICONV=$file_path
set_checked iconv
return 0
}
# END OF check4_

# FUNCTION: check4_
# Description: check if  is installed
# Parameters: none
# Variables set:
#	 -  full path
#	output - error message (if any)
#check4_()
#{
#is_checked  && return 0
#check4_file  --file --path ""
#result=$? && [ $result -ne 0 ] && return 1
#export =$file_path
#set_checked
#return 0
#}
# END OF check4_
