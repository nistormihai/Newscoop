STATIC URLS

1. http://[site]/look/[template_path]?[parameters_list]

The old URL type containing the full template path and the parameters list.

- site = publication site name


2. http://[site]/[lang]/[issue_sn]/[sect_sn]/[art_sn]?[other_parameters]

- site = publication site name
- lang = language identifier: en, es, sr etc.
- issue_sn = issue short name; this is not the same as the issue name; it will
be filled in by the user creating the issue; default value is the issue number
- sect_sn = section short name; this is not the same as the section name; it
will be filled in by the user creating the section; default value is the
section number
- art_sn = article short name; this is not the same as the article name; it
will be filled in by the user creating the section; default value is the article
number
- other_parameters = remaining parameters

Examples of URL:
http://www.tol.cz/en/mar15/news/prague_fire/?tpl=32
http://www.tol.cz/en/mar15/?tpl=15&ALStart=10
http://www.feral.hr/en/45/6/421/

The user should be able to select the way short names will be generated by
default:
- just the identifiers (http://www.tol.cz/3/en/45/2/253/84372)
- add a prefix (http://www.tol.cz/pub3/en/iss12/sect3/art847/28191); the
prefixes will be defined by the user once for the whole publication

short name constraints:
- [a..z], [A..Z], [0..9], _, -
- must not be equal to 0

--------------------------------------------------------------------------------

Template types

From 2.2 the templates will have a corresponding record in the database and
will be separated in three categories:
- article template (or general purpose)
- section templates
- issue templates
This type will be selected by the user at upload time and will help remove
duplicate URLs. Right now two different URLs may get you the same page:
	/look/issue.tpl?IdLanguage=1&...&NrIssue=11
is the same as:
	/look/issue.tpl?IdLanguage=1&...&NrIssue=11&NrSection=4&NrArticle=273

By having this template differenciation the parser will be able to remove
unnecessary parameters from the URL: NrSection=4&NrArticle=273

Suggestions:

Versions 1 and 2 are good for log analysers; it's easier to get the publication
related data: just a simple parse of the url. It looks better too :)

Versions 3 and 4 are shorter but offer very little info (template name - 4) or
no info at all.


- at issue level it will be mandatory to specify:
     - issue template
     - section template (this will be the default section template)
     - article template
- at section level the user may specify (optional):
     - section template
     - article template
this means:
- you must: specify issue, section and article templates on issue level
- this inherits down the structure
- you can: specify section and article for section and article
- if nothing is specified, the issue level defaults will be used.


--------------------------------------------------------------------------------

TABLES

- URLTypes (new)

- Templates (new)

- TemplateTypes (new)

- Aliases (new)

- New events to Events table:
	- 151: 'Add alias'
	- 152: 'Delete alias'
	- 153: 'Update alias'

- Publications
+ IdDefaultAlias int(10) unsigned NOT NULL
+ IdURLType int(10) unsigned NOT NULL (references URLTypes.Id)

- Issues
+ ShortName char(32) NOT NULL

- Sections
+ ShortName char(32) NOT NULL

- Articles
+ ShortName char(32) NOT NULL


--------------------------------------------------------------------------------

MESSAGES

Every publication has an URL processing script assigned; the script name is
[pub_sn].php. On every request apache will call this script which reads the
URL and POST parameters (if needed) and forwards the request to the campsite
server. These messages are used by the campsite server and the publication php
scrip to communicate.

Message structure

Message types

1. URL request
direction: publication script -> campsite server
msg. type identifier: 0x0001

Message structure
<CampsiteMessage MessageType="URLRequest">
	<HTTPHost>[http_host]</HTTPHost>
	<DocumentRoot>[document_root]</DocumentRoot>
	<RemoteAddress>[remote_address]</RemoteAddress>
	<PathTranslated>[path_translated]</PathTranslated>
	<PathInfo>[path_info]</PathInfo>
	<RequestMethod>[request_method]</RequestMethod>
	<ReuqestURI>[request_uri]</RequestURI>
	<Parameters>
		<Parameter Name=[param_name] Type="string">[param_value]</Parameter>
	</Parameters>
	<Cookies>
		<Cookie Name="cookie_name">[cookie_value]</Cookie>
	</Cookies>
</CampsiteMessage>

- document_root (string) contains the path to the document root directory
- remote_address (string) is the client ip address
- path_translated (string)
- path_info (string)
- request_method (string): GET or POST
- query_string (string): the query string when GET method was used and the posted
  data if the POST method was used
- http_cookie (string): cookie set by campsite - identifying the user


2. Reset cache
direction: publication script -> campsite server
msg. type identifier: 0x0002

Purpose: clear cache, re-read configuration

Message structure
<CampsiteMessage MessageType="ResetCache">
	<CacheType>[cache_type]</CacheType>
	<Parameters>
		<Parameter Name=[name]>[value]</Parameter>
	</Parameters>
</CampsiteMessage>

- cache_type may take the following values: all, topics, article_types, publications


3. Restart server
direction: publication script -> campsite server
msg. type identifier: 0x0003

Purpose: restart the template engine

Message structure
<CampsiteMessage MessageType="RestartServer">
</CampsiteMessage>


4. Get status
direction: publication script -> campsite server
msg. type identifier: 0x0004


5. Get status - answer message
direction: campsite server -> publication script
msg. type identifier: 0x1004


--------------------------------------------------------------------------------

Action classes affected by the static URL feature:
- CActFormParameters
- CActPrint (Publication Site, Issue Template, Section Template, Article Template)
- CActSubscription
- CActUser
- CActLogin
- CActSearch
- CActURLParameters

New action classes:
- CActURIPath
- CActURI

