<?php
// Call CampURIShortNamesTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "CampURIShortNamesTest::main");
}

require_once('PHPUnit/Framework/TestCase.php');
require_once('PHPUnit/Framework/TestSuite.php');

require_once('template_engine/classes/CampURIShortNames.php');

require_once('set_path.php');

/**
 * Test class for CampURIShortNames.
 * Generated by PHPUnit_Util_Skeleton on 2007-07-02 at 13:27:00.
 */
class CampURIShortNamesTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var object
     */
    protected $m_uri = null;

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once('PHPUnit/TextUI/TestRunner.php');

        $suite  = new PHPUnit_Framework_TestSuite('CampURIShortNamesTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
   	{
        $uri = 'http://campsite.localhost.localdomain/en/first/opensource/43/';
        $this->m_uri = CampURIShortNames::singleton($uri);
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    public function testBuildURI()
    {
    	$this->assertEquals('/en/first/opensource/43/', $this->m_uri->buildURI());
    }
    
    public function testGetHost()
    {
        $this->assertEquals('campsite.localhost.localdomain', $this->m_uri->getHost());
    }
    
    public function testGetRequestURI()
    {
        $this->assertEquals('/en/first/opensource/43/', $this->m_uri->getRequestURI());
    }
    
    public function testGetPublicationAlias()
    {
        $this->assertEquals('campsite.localhost.localdomain', $this->m_uri->getPublicationAlias());
    }
    
    public function testGetLanguageCode()
    {
        $this->assertEquals('en', $this->m_uri->getLanguageCode());
    }
    
    public function testGetIssueShortName()
    {
        $this->assertEquals('first', $this->m_uri->getIssueShortName());
    }
    
    public function testGetSectionShortName()
    {
        $this->assertEquals('opensource', $this->m_uri->getSectionShortName());
    }
    
    public function testGetArticleShortName()
    {
        $this->assertEquals('43', $this->m_uri->getArticleShortName());
    }
}

// Call CampURIShortNamesTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "CampURIShortNamesTest::main") {
    CampURIShortNamesTest::main();
}
?>